heat_template_version: 2015-10-15

description: Advanced template to a single ecs named singleecs

parameters:
  image:
    type: string
    label: Image name or ID
    description: Image to be used for compute instance.
    default: Enterprise_RedHat_7.3_latest
  flavor:
    type: string
    label: Flavor
    description: Type of instance (flavor) to be used
    default: s1.large
  ssh_key:
    type: string
    label: Key name
    description: Name of key-pair to be used for compute instance.
    default: w00384512-mgmt
  
  VERSION:
    type: string
    label: version
    description: openstack version
    default: openstack-newton

resources:
  ssh:
    type: OS::Neutron::SecurityGroup
    properties:
      name: ssh
      rules:
        - protocol: tcp
          remote_ip_prefix: 0.0.0.0/0
          port_range_min: 22
          port_range_max: 22

  http:
    type: OS::Neutron::SecurityGroup
    properties:
      name: http
      rules:
        - protocol: tcp
          remote_ip_prefix: 0.0.0.0/0
          port_range_min: 80
          port_range_max: 80

  network:
    type: OS::Neutron::Net
    properties:
      name: test_sg_net

  subnet:
    type: OS::Neutron::Subnet
    properties:
      name: sub-w00384512
      network_id: { get_resource: network }
      cidr: 192.168.1.0/24
      ip_version: 4
      dns_nameservers:
        - 100.125.4.25
        - 8.8.8.8
        - 8.8.4.4

  router_interface:
    type: OS::Neutron::RouterInterface
    properties:
      router: 1d8c3332-5547-45a9-a1f9-c6e4594d997f
      subnet: { get_resource: subnet }
  
  server_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: network }
      security_groups:
        - { get_resource: ssh }
        - { get_resource: http }

  server_init:
    type: OS::Heat::MultipartMime
    properties:
      parts:
        - config: { get_resource: mkfs_datavolume }

  mkfs_datavolume:
    type: OS::Heat::SoftwareConfig
    properties:
      group: script
      config: |
        #!/bin/bash -ex
        echo "Creating file system on volume..."
        disk=$(lsblk -r | grep disk | grep -v $(lsblk -r |grep 'part /$' | awk '{print $1}' | sed 's/[0-9]$//') | awk '{print $1}')
        parted -s -a optimal /dev/$disk mklabel msdos -- mkpart primary ext4 1 -1
        partition=$(lsblk -r | grep $disk | grep 'part' | awk '{print $1}')
        mkfs.ext4 /dev/$partition
        sleep 5
        mount /dev/$partition /mnt

  admin_server:
    type: OS::Nova::Server
    properties:
      block_device_mapping_v2:
        - {boot_index: 0, volume_size: 40, delete_on_termination: True, image_id: {get_param: image}}
        - {boot_index: -1, volume_id: {get_resource: volume}} 
      flavor: { get_param: flavor }
      key_name: { get_param: ssh_key }
      networks:
        - port: { get_resource: server_port }
      user_data_format: RAW
      user_data: { get_resource: server_init }
      availability_zone: eu-de-01
    depends_on: router_interface

  volume:
    type: OS::Cinder::Volume
    properties:
      name: test_volume
      size: 10
      availability_zone: eu-de-01



