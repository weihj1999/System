Check
#modprobe --first-time 8021q
#modinfo 8021q

Command Line:
create vlan
Create  vlan 100 on a tap device eth0.100
#ip link add link eth0 name eth0.100 type vlan id 100

check this vlan
#ip -d link show eth0.100
-d to show all the detail information of on interface

check address
#ip -d addr show

add ip address
#ip addr add 192.168.100.1/24 brd 192.168.100.255 dev eth0.100
#ip link set dev eth0.100 up

close the device
#ip link set dev eth0.100 down

Remove the device
#ip link delete eth0.100

check vlan
#cat /proc/net/vlan/config

Scripts file setting
(RHEL71)
#vi /etc/sysconfig/network-scripts/ifcfg-ens34.911
VLAN=yes
DEVICE=ens34.911
BOOTPROTO=static
ONBOOT=yes
IPADDR=10.0.11.33
NETMASK=255.255.255.0

or
#vi /etc/sysconfig/network-scripts/ifcfg-vlan911
VLAN=yes
VLAN_NAME_TYPE=VLAN_PLUS_VID_NO_PAD
DEVICE=vlan911
PHYSDEV=ens34
BOOTPROTO=static
ONBOOT=yes
TYPE=Ethernet
IPADDR=10.0.11.33
NETMASK=255.255.255.0

Restart networking service 
#systemctl restart network

It will be similiar to set VLAN for bond device, and please pay attention to the below:
1.
In the case of VLANs over bonds, it is important that the bond has slaves and that they are “up” before bringing up the VLAN interface. 
At the time of writing, adding a VLAN interface to a bond without slaves does not work.
2.
A VLAN slave cannot be configured on a bond with the fail_over_mac=follow option, because the VLAN virtual device cannot change its MAC address to match the parent's new MAC address. 
In such a case, traffic would still be sent with the now incorrect source MAC address.

A full guide can be referred:
http://marco.guardigli.it/2011/08/network-interface-bonding-and-trunking.html


