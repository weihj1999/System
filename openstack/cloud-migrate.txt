
进行企业业务云迁移的过程中涉及的问题很多，单纯的虚拟机镜像复制迁移，已有方案，不过导致系统宕机时间
过长，并不是大家优选的。 这也解释了p2v技术比较成熟的情况下，大家仍然不是很喜欢这种方案的原因。

云资源的统一管理调度，决定了云迁移需要从虚拟机起步，循序渐进的完成数据库，应用服务等活动。 本文收集
下已有的比较成熟的经验，供后续参考：

1. 存储总量达20T的MySQL实例，如何完成迁移

1.1 测试用例、过程
本次迁移所有mysql实例均有外网IP使用，所以选用迁移工具完成数据导入。

迁移工具的基本原理： 通过待迁移实例提供的高权限账号获取源实例基本的mysql实例配置，并同步到目标实例；
通过mysqldump直接将源实例导出，传输到目标实例后导入；源实例和目标实例建立主从关系同新数据；

注：目标实例和源实例通过NAT方式以一台带外网的服务器为中转发起通信。 

1.1.1 迁移工具基本功能：
本文描述的前一工具是腾讯云的，可以另外查询其详细功能。建安来说：根据引导建立迁移任务；在后台管理页观察
迁移任务后台日志等。

任务开始运行后检测代理服务器流量变化， 包括但不限于：特定网卡的流量，　内网入流量，插入数，写磁盘数量。

备注：　
如何为测试数据产生较大的数据量，　推荐使用mysql_gen_data，可以在github进行查找。 
产生测试数据并导入到mysql的过程如下

#!/bin/bash
./mysql_gen_data -f "%1n,%100s,%100s,%100s,%100s.%100s" -n 1000000 > random.dat
mysql -u root -p******** -e "create database mytest;use mytest \
CREATE TABLE mytest_tb \
(c1 varchar(100),c2 varchar(100),c3 varchar(100),\
(c4 varchar(100),c6 varchar(100),c6 varchar(100),\
ENGINE=InnoDB DEFAULT CHARSET=uft8;"
for i in (1,10); do 
      echo "$(date'+%T') round $i start"
      echo "prepare data..."
      sed -i "s/^/$i/" random.data
      echo "insert data..."
      mysql -u root -p********* mytest -e "LOAD DATA local INFILE '/data/random.data' into table mytest_tb fields terminated by',';"
      echo "$(date'+%T') round $i end"
done
1.1.2 主从以及从机和云实例建立主从同步
如何配置mysql的主从关系：
主mysql： 
server_id=9
log_bin=binlog
binlog_format=ROW
innodb_stats_on_metadata=off

1.1.3 多实例+较大binlog并发同步
15个实例并发迁移，每天总共产生约100G的binlog，测试场景如下

                          /    3312            DB1
                        /      3313            DB2
带外网的IDC服务器      --     3314            DB3
                        \    ...             ...
                          \  3326            DB15

注： 如何在一台服务器上创建多个mysql实例
使用mysql自带的mysqld_multi工具，其实只是一个perl脚本， 开启多实例的配置（/etc/my.conf）如下：
[mysqld_multi]
mysqld = /usr/bin/mysqld_safe
mysqladmin = /usr/bin/mysqladmin
user = root
password = ********

[mysqld1]
port = 3306
datadir = /var/lib/mysql
socket = /var/lib/mysql/mysql.sock
pid_file = /var/lib/mysqld.pid
server_id = 11
log_bin = binlog
binlog_format = ROW
expire_logs_days = 1
innodb_stats_on_metadata = off

symbolic-links = 0
user=root
sql_mode = NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES

[mysqld2]
...
[msyqldN]
....
然后使用mysqld_multi start 1-N启动配置项里面的对应数量实例即可。 

累了， 需要转一下注意力， 后续继续

